package  {		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.filesystem.File;	import flash.filesystem.FileMode;	import flash.filesystem.FileStream;		public class MapEditor extends MovieClip {				private var mapPoints:Array;				private var dataFile:Object;				private function openFile(e:Event) {						var inFile : File = new File();						inFile.browseForOpen("Open File");						inFile.addEventListener(Event.SELECT, function(e:Event) : void{										fileName.text = inFile.nativePath;					//fileName.text = inFile.name;										var lol:FileStream = new FileStream();					lol.open(inFile, FileMode.READ);										try {						dataFile = JSON.parse( lol.readUTFBytes(lol.bytesAvailable) );					} catch (e:SyntaxError) {						dataFile = null;						fileName.text = "Could Not Load " + inFile.name;					}										lol.close();									});					}				private function saveFile(e:Event) {						var outFile : File = new File();						outFile.browseForSave("Save File");						outFile.addEventListener(Event.SELECT, function(e:Event) : void{										JSON.stringify("LOL");										fileName.text = outFile.nativePath;									});					}				private function addNode(e:Event) {						trace("ADD NODE");											}				private function pickBackground(e:Event) {						var backgroundPicture : File = new File();						backgroundPicture.browseForOpen("Select Background File");						backgroundPicture.addEventListener(Event.SELECT, function(e:Event) : void{					//				});					}				public function MapEditor() {						fileName.text = "No File Loaded";						openButton.addEventListener(MouseEvent.CLICK, openFile);			saveButton.addEventListener(MouseEvent.CLICK, saveFile);						editorFrame.addEventListener(MouseEvent.DOUBLE_CLICK, addNode);			editorFrame.addEventListener(MouseEvent.RIGHT_CLICK, pickBackground);					}							}	}