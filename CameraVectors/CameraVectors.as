package  {		import FootTracker;	import ColourTracker;	import flash.display.MovieClip;	import flash.media.Camera;	import flash.media.Video;	import flash.events.Event;	import flash.display.Bitmap;	import flash.display.BitmapData;	import flash.events.MouseEvent;	import flash.geom.Point;	import flash.display.Shape;	import flash.display.Shader;	import flash.geom.Matrix;	import flash.geom.Matrix3D;	import flash.geom.Vector3D;	import flash.sampler.NewObjectSample;		public class CameraVectors extends MovieClip {				var cameraWidth:uint = 640;		var cameraHeight:uint = 480;				var camera:Camera;				var colourTracker:ColourTracker;				var footTracker:FootTracker;				public function CameraVectors() {						camera = Camera.getCamera("0");			camera.setMode(640, 480, stage.frameRate);						colourTracker = new ColourTracker(camera, cameraWidth, cameraHeight);						footTracker = new FootTracker(camera, cameraWidth, cameraHeight);						stage.addEventListener(MouseEvent.CLICK, setCorner);						var vid = new Video(cameraWidth, cameraHeight);			vid.attachCamera(camera);			this.addChild(vid);						var square:Shape = new Shape();			square.graphics.clear();			square.graphics.lineStyle(1, 0x000000);			square.graphics.drawRect(cameraWidth, 0, 500, 500);						this.addChild(square);						dot = new Shape();			this.addChild(dot);						footMarker = new Shape();			this.addChild(footMarker);						aMarker = new Shape();			this.addChild(aMarker);						bMarker = new Shape();			this.addChild(bMarker);						cMarker = new Shape();			this.addChild(cMarker);						dMarker = new Shape();			this.addChild(dMarker);					}				var A,B,C,D : Point;		var dot:Shape;				private function setCorner(e:Event) : void {						var cornerAt:Point = colourTracker.track();						//trace(cornerAt);						if (cornerAt == null)				return;						if (A == null) {				A = cornerAt;								aMarker.graphics.clear();				aMarker.graphics.lineStyle(5, 0xFF0000);				aMarker.graphics.drawCircle(A.x - 5, A.y - 5, 10);								return;			}						if (B == null) {				B = cornerAt;								bMarker.graphics.clear();				bMarker.graphics.lineStyle(5, 0xFF0000);				bMarker.graphics.drawCircle(B.x - 5, B.y - 5, 10);								return;			}						if (C == null) {				C = cornerAt;								cMarker.graphics.clear();				cMarker.graphics.lineStyle(5, 0xFF0000);				cMarker.graphics.drawCircle(C.x - 5, C.y - 5, 10);								return;			}						if (D == null) {				D = cornerAt;								dMarker.graphics.clear();				dMarker.graphics.lineStyle(5, 0xFF0000);				dMarker.graphics.drawCircle(D.x - 5, D.y - 5, 10);							}						//trace(A, B, C, D);						stage.removeEventListener(MouseEvent.CLICK, setCorner);						var xs : Vector3D = new Vector3D(0, 1, 0, 1);			var ys : Vector3D = new Vector3D(0, 0, 1, 1);			var zs : Vector3D = new Vector3D(0, 0, 0, 0);			var ws : Vector3D = new Vector3D(1, 1, 1, 1);						var m : Matrix3D = new Matrix3D();						// slightly off so the det of the matrix can be non zero			m.copyRowFrom(0, new Vector3D(A.x, A.y, 0.00000000001, 1));			m.copyRowFrom(1, new Vector3D(B.x, B.y, 0, 1));			m.copyRowFrom(2, new Vector3D(C.x, C.y, 0, 1));			m.copyRowFrom(3, new Vector3D(D.x, D.y, -0.00000000001, 1));						trace( A.x, A.y, 0, 1 );			trace( B.x, B.y, 0, 1 );			trace( C.x, C.y, 0, 1 );			trace( D.x, D.y, 0, 1 );						var mi : Matrix3D = m.clone();			mi.invert();						var abcd : Vector3D = mi.transformVector(xs);			var efgh : Vector3D = mi.transformVector(ys);			var ijkl : Vector3D = mi.transformVector(zs);			var mnop : Vector3D = mi.transformVector(ws);						transformMatrix =  new Matrix3D();						transformMatrix.copyRowFrom(0, abcd);			transformMatrix.copyRowFrom(1, efgh);			transformMatrix.copyRowFrom(2, ijkl);			transformMatrix.copyRowFrom(3, mnop);						stage.addEventListener(Event.ENTER_FRAME, trackFoot);			stage.addEventListener(MouseEvent.CLICK, printMovement);					}				var transformMatrix : Matrix3D;				var footMarker, aMarker, bMarker, cMarker, dMarker:Shape;				var foot : Point;				private function trackFoot(e:Event) : void {						//var tfoot : Point = footTracker.track();			var tfoot : Point = colourTracker.track();						if (tfoot == null)				return;						foot = tfoot;						footMarker.graphics.clear();			footMarker.graphics.lineStyle(5, 0x0000FF);			footMarker.graphics.drawCircle(foot.x - 5, foot.y - 5, 10);									/*			var a:Number = Point.distance(foot, A);			var b:Number = Point.distance(foot, B);			var c:Number = Point.distance(foot, C);			var d:Number = Point.distance(foot, D);						var sum:Number = a + b + c + d;						trace(a/sum, b/sum, c/sum, d/sum);			*/						printMovement(e);					}				private function printMovement(e:Event) : void {						var currentVector : Vector3D = new Vector3D(foot.x, foot.y, 0, 1);			var calcPos : Vector3D = transformMatrix.transformVector(currentVector);			//trace(calcPos);						dot.graphics.clear();			dot.graphics.lineStyle(1, 0xFF0000);						dot.graphics.drawRect(cameraWidth + (calcPos.x * 500) - 5, (calcPos.y * 500) - 5, 10, 10);								}			}	}