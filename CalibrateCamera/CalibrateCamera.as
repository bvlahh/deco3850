package  {		import TrackingCamera;	import flash.display.MovieClip;	import flash.media.Camera;	import flash.media.Video;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.display.Shader;	import flash.display.Shape;	import flash.geom.Point;		public class CalibrateCamera extends MovieClip {				var camera1 : Camera;		var trackingCamera1 : TrackingCamera;				var camera2 : Camera;		var trackingCamera2 : TrackingCamera;				// visualisation		var point1A : Shape;		var point1B : Shape;		var point1C : Shape;		var point1D : Shape;		var footPoint1 : Shape;				var point2A : Shape;		var point2B : Shape;		var point2C : Shape;		var point2D : Shape;		var footPoint2 : Shape;				var point1 : Shape;		var point2 : Shape;				public function CalibrateCamera() {						stage.addEventListener(MouseEvent.CLICK, calibrate);						camera1 = Camera.getCamera("0");			camera1.setMode(640, 480, stage.frameRate, false);						trackingCamera1 = new TrackingCamera(camera1);						var vid1 : Video = new Video(640, 480);			vid1.attachCamera(camera1);			var mc1 : MovieClip = new MovieClip();			mc1.addChild(vid1);			mc1.addEventListener(MouseEvent.CLICK, calibrate1);			this.addChild(mc1);						camera2 = Camera.getCamera("1");			camera2.setMode(640, 480, stage.frameRate, false);						trackingCamera2 = new TrackingCamera(camera2);						var vid2 : Video = new Video(640, 480);			vid2.attachCamera(camera2);			var mc2 : MovieClip = new MovieClip();			mc2.addChild(vid2);			mc2.addEventListener(MouseEvent.CLICK, calibrate2);			this.addChild(mc2);						vid2.x = vid1.width;						// visualisation			point1A = new Shape();			point1A.graphics.clear();			point1A.graphics.lineStyle(5, 0xFF0000);			point1A.graphics.drawCircle(0, 0, 10);			addChild(point1A);						point1B = new Shape();			point1B.graphics.clear();			point1B.graphics.lineStyle(5, 0xFF0000);			point1B.graphics.drawCircle(0, 0, 10);			addChild(point1B);						point1C = new Shape();			point1C.graphics.clear();			point1C.graphics.lineStyle(5, 0xFF0000);			point1C.graphics.drawCircle(0, 0, 10);			addChild(point1C);						point1D = new Shape();			point1D.graphics.clear();			point1D.graphics.lineStyle(5, 0xFF0000);			point1D.graphics.drawCircle(0, 0, 10);			addChild(point1D);						point2A = new Shape();			point2A.graphics.clear();			point2A.graphics.lineStyle(5, 0xFF0000);			point2A.graphics.drawCircle(0, 0, 10);			addChild(point2A);						point2B = new Shape();			point2B.graphics.clear();			point2B.graphics.lineStyle(5, 0xFF0000);			point2B.graphics.drawCircle(0, 0, 10);			addChild(point2B);						point2C = new Shape();			point2C.graphics.clear();			point2C.graphics.lineStyle(5, 0xFF0000);			point2C.graphics.drawCircle(0, 0, 10);			addChild(point2C);						point2D = new Shape();			point2D.graphics.clear();			point2D.graphics.lineStyle(5, 0xFF0000);			point2D.graphics.drawCircle(0, 0, 10);			addChild(point2D);						var rect:Shape = new Shape();			rect.graphics.clear();			rect.graphics.lineStyle(1, 0x000000);			rect.graphics.drawRect(100, 500, 440, 280);			addChild(rect);						footPoint1 = new Shape();			footPoint1.graphics.clear();			footPoint1.graphics.lineStyle(5, 0x00FF00);			footPoint1.graphics.drawCircle(0, 0, 10);			addChild(footPoint1);						footPoint2 = new Shape();			footPoint2.graphics.clear();			footPoint2.graphics.lineStyle(5, 0xFF00FF);			footPoint2.graphics.drawCircle(0, 0, 10);			addChild(footPoint2);						point1 = new Shape();			point1.graphics.clear();			point1.graphics.lineStyle(1, 0x00FF00);			point1.graphics.drawRect(0, 0, 10, 10);			addChild(point1);						point2 = new Shape();			point2.graphics.clear();			point2.graphics.lineStyle(1, 0xFF00FF);			point2.graphics.drawRect(0, 0, 10, 10);			addChild(point2);					}				function calibrate1(e:Event) : void {						trackingCamera1.calibrate();						if (trackingCamera1.A != null) {				point1A.x = trackingCamera1.A.x;				point1A.y = trackingCamera1.A.y;			}						if (trackingCamera1.B != null) {				point1B.x = trackingCamera1.B.x;				point1B.y = trackingCamera1.B.y;			}						if (trackingCamera1.C != null) {				point1C.x = trackingCamera1.C.x;				point1C.y = trackingCamera1.C.y;			}						if (trackingCamera1.D != null) {				point1D.x = trackingCamera1.D.x;				point1D.y = trackingCamera1.D.y;			}					}				function calibrate2(e:Event) : void {						trackingCamera2.calibrate();						if (trackingCamera2.A != null) {				point2A.x = trackingCamera2.A.x + 640;				point2A.y = trackingCamera2.A.y;			}						if (trackingCamera2.B != null) {				point2B.x = trackingCamera2.B.x + 640;				point2B.y = trackingCamera2.B.y;			}						if (trackingCamera2.C != null) {				point2C.x = trackingCamera2.C.x + 640;				point2C.y = trackingCamera2.C.y;			}						if (trackingCamera2.D != null) {				point2D.x = trackingCamera2.D.x + 640;				point2D.y = trackingCamera2.D.y;			}					}				function calibrate(e:Event) : void {						if ( trackingCamera1.calibrated() && trackingCamera2.calibrated() ) {								stage.removeEventListener(MouseEvent.CLICK, calibrate);								stage.addEventListener(Event.ENTER_FRAME, track);							}					}				function track(e:Event) : void {						var foot1:Point = trackingCamera1.trackFoot();			var foot2:Point = trackingCamera2.trackFoot();						if (foot1 == null) {								point1.x = -10;				point1.y = -10;								return;							}						point1.x = (foot1.x * 440) + 100 - 5;			point1.y = (foot1.y * 280) - 5 + 500;						if (foot2 == null) {								point2.x = -10;				point2.y = -10;								return;							}						point2.x = (foot2.x * 440) + 100 - 5;			point2.y = (foot2.y * 280) - 5 + 500;						footPoint1.x = trackingCamera1.foot.x - 5;			footPoint1.y = trackingCamera1.foot.y - 5;						footPoint2.x = trackingCamera2.foot.x - 5 + 640;			footPoint2.y = trackingCamera2.foot.y - 5;					}			}	}