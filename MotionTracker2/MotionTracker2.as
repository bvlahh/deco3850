package  {		import flash.display.MovieClip;	import flash.media.Camera;	import flash.media.Video;	import flash.events.Event;	import flash.display.BitmapData;	import flash.display.BlendMode;	import flash.geom.Matrix;	import flash.display.Bitmap;		public class MotionTracker2 extends MovieClip {				private var cam : Camera;		private var vid : Video;		private var processed : BitmapData;				public function MotionTracker2() {			// constructor code			addEventListener(Event.ADDED_TO_STAGE, onAddedToStage);		}				private function onAddedToStage(event:Event) : void {						var camW : int = 640;			var camH : int = 480;						cam = Camera.getCamera();			cam.setMode(camW, camH, stage.frameRate);						vid = new Video(camW, camH);			vid.attachCamera(cam);						this.addChild(vid);						//vid2.x = vid1.width;			//this.addChild(vid2);						processed = new BitmapData(camW, camH, false);						var output:Bitmap = new Bitmap(processed);			output.x = vid.width;			this.addChild(output);						addEventListener(Event.ENTER_FRAME, onEnterFrameHandler);		}				private function onEnterFrameHandler(event : Event) : void {						var b:Bitmap = new Bitmap();						// update the thing			//processed.draw(vid);			processed.draw();			//processed.draw(old_frame, null, null, BlendMode.DIFFERENCE);											}			}	}